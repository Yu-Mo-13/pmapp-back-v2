version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: pmapp-back-app
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - ./:/var/www/html
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - pmapp-network
    depends_on:
      - db
      - redis

  nginx:
    image: nginx:alpine
    container_name: pmapp-back-nginx
    restart: unless-stopped
    ports:
      - "8080:80"
    volumes:
      - ./:/var/www/html
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    networks:
      - pmapp-network
    depends_on:
      - app

  db:
    image: postgres:13-alpine
    container_name: pmapp-back-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: pmapp_db
      POSTGRES_USER: pmapp_user
      POSTGRES_PASSWORD: pmapp_password
      POSTGRES_ROOT_PASSWORD: pmapp_root_password
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - pmapp-network

  redis:
    image: redis:7-alpine
    container_name: pmapp-back-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - pmapp-network

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pmapp-back-pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "8081:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - pmapp-network
    depends_on:
      - db

volumes:
  db_data:
  redis_data:
  pgadmin_data:

networks:
  pmapp-network:
    driver: bridge